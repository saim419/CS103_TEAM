#! /opt/miniconda3/bin/python3
'''
todo.py is an app that maintains a todo list
It is meant to be used as a shell command 
% todo show  .... shows all of the uncompleted todo items
% todo showall ... shows al of the todo items
% todo add "title" "description of an item"  ... adds the itme
% todo complete ITEM_NUM ... marks that item as completed
% todo delete ITEM_NUM ... removes the item from the database

This app will store the data in a SQLite database ~/todo.db

Recall that sys.argv is a list of strings capturing the
command line invocation of this program
sys.argv[0] is the name of the script invoked from the shell
sys.argv[1:] is the rest of the arguments (after arg expansion!)

'''

import sqlite3
import sys
import os

# here are some helper functions ...

def print_usage():
    ''' print an explanation of how to use this command '''
    print('''usage:
            todo show
            todo showall
            todo showcomplete
            todo add name description
            todo complete item_id
            todo delete item_id
            '''
            )

def print_todos(todos):
    ''' print the todo items '''
    for item in todos:
            print("item #%-3s: %-10s %30s %2d"%item)

def process_args(arglist):
    if arglist==[]:
        print_usage()
    elif arglist[0]=="show":
        cur.execute("SELECT rowid,title,desc,completed from todo where completed=0")
        print_todos(cur.fetchall())
    elif arglist[0]=="showall":
        cur.execute("SELECT rowid,* from todo")
        print_todos(cur.fetchall())
    elif arglist[0]=="showcomplete":
        cur.execute("SELECT rowid,* from todo where completed=1")
        print_todos(cur.fetchall())
    elif arglist[0]=='add':
        if len(arglist)!=3:
            print_usage()
        else:
            name=arglist[1]
            desc = arglist[2]
            cur.execute("INSERT INTO todo VALUES(?,?,?)",(name,desc,0))
    elif arglist[0]=='complete':
        if len(arglist)!= 2:
            print_usage()
        else:
            cur.execute("UPDATE todo SET completed=1 where rowid=(?)",(arglist[1],))
    elif arglist[0]=='delete':
        if len(arglist)!= 2:
            print_usage()
        else:
            cur.execute("DELETE FROM todo where rowid=(?)",(arglist[1],))
    else:
        print(arglist,"is not implemented")
        print_usage()

# here is where we run the script
# first we get a connection to the database
con= sqlite3.connect(os.getenv('HOME')+'/todo.db')
cur = con.cursor()

# then we create the todo table if it doesn't exist
# and for completed we use 0 for False and 1 for True, as sqlite has not booleans
cur.execute('''CREATE TABLE IF NOT EXISTS todo
                    (title text, desc text, completed int)''')

if len(sys.argv)==1:
    # they didn't pass any arguments, so prompt for them:
    print_usage()
    args = input("command> ").split(" ")
else:
    args = sys.argv[1:]
# now we can get process the arguments
process_args(args)

# and finally we commit our changes and close the connection
con.commit()
con.close()

